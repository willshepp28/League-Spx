SEQUELIZE CLI

- npx sequelize-cli init
- npx sequelize-cli db:create
- npx sequelize-cli model:generate --name User --attributes 
- npx sequelize-cli db:migrate
- npx sequelize-cli seed:generate --name



LONGITUDE / LATITUDE
https://galxzx.github.io/blog/2017/03/15/Distance-Based-Queries-with-PostgreSQL-PostGIS-and-Sequelize/ 
 https://sequelize.org/master/class/lib/data-types.js~GEOMETRY.html
https://stackoverflow.com/questions/44675630/geospatial-distance-calculator-using-sequelize-mysql
https://manuel-rauber.com/2016/01/08/using-geo-based-data-with-sequelizejs-utilizing-postgresql-and-ms-sql-server-in-node-js/
https://medium.com/javascript-in-plain-english/an-introduction-to-geocoding-using-node-js-fe1a5d3aa05c


PostGIS
- https://stackoverflow.com/questions/36642210/how-to-correctly-find-objects-by-proximity-using-sequelize-js-and-postgis
- https://stackoverflow.com/questions/49010851/sequelize-postgis-sort-by-distance-from-point


CALCULATE RADIUS
https://www.geodatasource.com/developers/javascript



DB OPERATIONS

\d+ "Leagues"  - describe a table





DATA MODEL 

* LEAGUE

    - name
    - coordinates
    - price
    - total_players
    - league_type ( community league, competive club, tournaments, facilites)
    - gender
    - password


* Brand
    - name
    - email
    - phone
    - website
    - profile_photo
    - password


* Campaign
    - name: string








QUERY

SELECT *
FROM your_table
WHERE ST_Distance_Sphere(the_geom, ST_MakePoint(your_lon,your_lat)) <= radius_mi * 1609.34